---
import '../styles/global.css';
export interface Props {
	title: string;
}

const { title } = Astro.props;

// Get tenant info from middleware
const tenantId = Astro.locals.tenantId || 'default';
import { getTenantConfig } from '../lib/tenant.js';
const tenantConfig = getTenantConfig(tenantId);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Restaurant inventory management system" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} - {tenantConfig.name}</title>
		<style>
			:root {
				--primary-color: {tenantConfig.primaryColor};
			}
		</style>
		<!-- Input Mask Library -->
		<script src="https://unpkg.com/imask@7.6.1/dist/imask.min.js"></script>
		<!-- Alpine.js -->
		<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.3/dist/cdn.min.js"></script>
	</head>
	<body class="bg-gray-50 min-h-screen">
		<slot />
		
		<!-- Pass tenant info to client-side JavaScript -->
		<script is:inline define:vars={{ tenantId, tenantConfig }}>
			window.TENANT_ID = tenantId;
			window.TENANT_CONFIG = tenantConfig;
			
			// Update localStorage keys to be tenant-aware
			const originalSetItem = localStorage.setItem;
			const originalGetItem = localStorage.getItem;
			const originalRemoveItem = localStorage.removeItem;
			
			localStorage.setItem = function(key, value) {
				// Don't prefix role keys (they should be global)
				if (key.includes('Role')) {
					return originalSetItem.call(this, key, value);
				}
				return originalSetItem.call(this, `${tenantId}_${key}`, value);
			};
			
			localStorage.getItem = function(key) {
				// Don't prefix role keys (they should be global)
				if (key.includes('Role')) {
					return originalGetItem.call(this, key);
				}
				return originalGetItem.call(this, `${tenantId}_${key}`);
			};
			
			localStorage.removeItem = function(key) {
				// Don't prefix role keys (they should be global)
				if (key.includes('Role')) {
					return originalRemoveItem.call(this, key);
				}
				return originalRemoveItem.call(this, `${tenantId}_${key}`);
			};
		</script>
	</body>
</html>

<style is:global>
	html {
		font-family: system-ui, sans-serif;
	}
</style> 