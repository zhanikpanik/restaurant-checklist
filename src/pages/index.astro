---
import Layout from '../layouts/Layout.astro';

// Static mode - data will be loaded via client-side JavaScript
let barProducts = [];
---

<Layout title="–ë–∞—Ä - –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å">
	<div class="min-h-screen bg-white">
		<!-- Header with Navigation -->
		<header class="bg-white border-b border-gray-200 px-4 py-6">
			<div class="max-w-md mx-auto">
				<div class="flex items-center justify-between mb-4">
					<a href="/restaurant/kitchen" class="text-orange-600 hover:text-orange-800">‚Üê –ö—É—Ö–Ω—è</a>
					<h1 class="text-3xl font-bold text-black">–ë–∞—Ä</h1>
					<a href="/restaurant/procurement" class="text-green-600 hover:text-green-800 text-sm">–ó–∞–∫—É–ø–∫–∏ ‚Üí</a>
				</div>
				<div class="text-center">
					<span class="text-sm text-gray-600">
						{barProducts.length > 15 ? "üìä –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Poster" : "üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"}
					</span>
				</div>
			</div>
		</header>

		<!-- Main Content -->
		<main class="max-w-md mx-auto px-4 py-6">
			<!-- Inventory View (Default) -->
			<div id="inventoryView" class="space-y-4">
				<!-- Loading State -->
				<div id="loadingState" class="text-center py-8">
					<div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
					<p class="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –±–∞—Ä–∞...</p>
				</div>
				
				<!-- Products Container (populated by JavaScript) -->
				<div id="productsContainer" class="space-y-4 hidden">
					<!-- Products will be loaded here dynamically -->
				</div>
			</div>

			<!-- Shopping List View (Hidden by default) -->
			<div id="shoppingListView" class="space-y-4 hidden">
				<!-- Search Field -->
				<div class="sticky top-0 z-10 bg-gray-50 p-4 rounded-lg border-2 border-blue-200 shadow-sm">
					<div class="relative">
						<div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
							<svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</div>
						<input 
							type="text" 
							id="productSearchInput"
							class="block w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base"
							placeholder="üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –±–∞—Ä–∞..."
							autocomplete="off"
						/>
						<div class="absolute inset-y-0 right-0 pr-3 flex items-center">
							<button 
								id="clearSearchBtn"
								class="h-5 w-5 text-gray-400 hover:text-gray-600 focus:outline-none hidden"
								title="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"
							>
								<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
								</svg>
							</button>
						</div>
					</div>
					<div id="searchResultsCount" class="mt-2 text-sm text-gray-600 hidden">
						<span id="searchResultsText"></span>
					</div>
				</div>
				
				<!-- Products List -->
				<div id="productsList" class="space-y-4">
					<!-- Shopping list products will be populated by JavaScript -->
				</div>
			</div>

			<!-- Action Buttons -->
			<div class="mt-8 space-y-4">
				<!-- Create Shopping List Button (Floating) -->
				<button 
					id="createShoppingListBtn" 
					class="fixed bottom-6 right-6 bg-blue-900 hover:bg-blue-800 text-white font-medium py-4 px-6 rounded-full shadow-2xl z-50 transition-all duration-300 hover:scale-105 min-w-[160px]"
				>
					–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–∫—É–ø
				</button>

				<!-- Shopping List Actions (Hidden by default) -->
				<div id="shoppingListActions" class="hidden space-y-3">
					<button 
						id="sendWhatsAppBtn" 
						class="w-full bg-green-500 hover:bg-green-600 text-white font-medium py-4 px-6 rounded-lg flex items-center justify-center space-x-2"
					>
						<span>üì±</span>
						<span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp</span>
					</button>
					<button 
						id="saveShoppingListBtn" 
						class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-4 px-6 rounded-lg"
					>
						–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫—É–ø
					</button>
					<button 
						id="cancelShoppingListBtn" 
						class="w-full bg-gray-500 hover:bg-gray-600 text-white font-medium py-4 px-6 rounded-lg"
					>
						–û—Ç–º–µ–Ω–∞
					</button>
				</div>
			</div>
		</main>
	</div>

	<script is:inline>
		// Load bar inventory data via our API proxy (no CORS issues)
		async function loadBarInventory() {
			const loadingState = document.getElementById('loadingState');
			const productsContainer = document.getElementById('productsContainer');
			
			try {
				console.log('üç∑ Loading bar inventory via API proxy...');
				
				// Call our API proxy endpoint (no CORS issues)
				const response = await fetch('/api/bar-inventory');
				const result = await response.json();
				
				if (!result.success) {
					throw new Error(result.error || 'Failed to load bar inventory');
				}
				
				const barProducts = result.data;
				console.log(`‚úÖ Loaded ${barProducts.length} bar products from Poster`);
				
				// Hide loading and show products
				loadingState.style.display = 'none';
				productsContainer.style.display = 'block';
				productsContainer.classList.remove('hidden');
				
				// Render products
				renderBarProducts(barProducts);
				
				// Update header indicator
				const headerSpan = document.querySelector('header span.text-sm');
				if (headerSpan) {
					headerSpan.textContent = `üìä –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Poster (${barProducts.length} —Ç–æ–≤–∞—Ä–æ–≤)`;
				}
				
			} catch (error) {
				console.error('‚ùå Failed to load bar inventory:', error);
				loadingState.innerHTML = `
					<div class="text-center py-8">
						<div class="text-red-500 mb-4">‚ùå</div>
						<p class="text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</p>
						<p class="text-sm text-gray-500">${error.message}</p>
						<button onclick="loadBarInventory()" class="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg">
							–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
						</button>
					</div>
				`;
			}
		}
		
		function renderBarProducts(products) {
			const container = document.getElementById('productsContainer');
			
			container.innerHTML = products.map(product => `
				<div class="product-item flex items-center justify-between p-4 bg-white rounded-lg border-l-4 border-blue-400" data-product-id="${product.id}">
					<div class="flex-1">
						<h3 class="text-lg font-medium text-gray-900">${product.name}</h3>
						${product.quantity <= product.minQuantity ? '<span class="text-xs text-red-600 font-medium">‚ö†Ô∏è –ú–∞–ª–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</span>' : ''}
					</div>
					<div class="text-right">
						<div class="text-lg font-semibold text-gray-900">
							${product.quantity} ${product.unit}
						</div>
						<div class="text-xs text-gray-500">
							–º–∏–Ω: ${product.minQuantity} ${product.unit}
						</div>
					</div>
				</div>
			`).join('');
			
			// Store products globally for checklist.js
			window.barProducts = products;
		}
		
		// Load data when page loads
		document.addEventListener('DOMContentLoaded', function() {
			loadBarInventory();
		});
	</script>

	<script src="/scripts/checklist.js" is:inline></script>
</Layout>
