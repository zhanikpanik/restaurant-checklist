---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Restaurant System - –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª">
	<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
		<div class="max-w-2xl w-full bg-white rounded-xl shadow-lg p-8">
			<div class="text-center mb-8">
				<h1 class="text-3xl font-bold text-gray-800 mb-2">üçΩÔ∏è Restaurant System</h1>
				<p class="text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã</p>
			</div>

			<div id="sectionsContainer" class="grid grid-cols-1 md:grid-cols-2 gap-4">
				<!-- Loading state -->
				<div class="col-span-full text-center py-8">
					<div class="animate-spin h-8 w-8 border-b-2 border-blue-600 rounded-full mx-auto mb-4"></div>
					<p class="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–¥–µ–ª–æ–≤...</p>
				</div>
			</div>

			<div class="mt-8 text-center">
				<p class="text-sm text-gray-500">–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º</p>
			</div>
		</div>
	</div>

	<script is:inline>
		// Load all departments and display them as sections
		async function loadSections() {
			try {
				const response = await fetch('/api/departments');
				const data = await response.json();
				
				if (data.success) {
					displaySections(data.data);
				} else {
					throw new Error(data.error);
				}
			} catch (error) {
				console.error('Error loading sections:', error);
				// Fallback to default sections
				displaySections([
					{ id: 1, name: '–ö—É—Ö–Ω—è', emoji: 'üç≥', poster_storage_id: 1 },
					{ id: 2, name: '–ë–∞—Ä', emoji: 'üç∑', poster_storage_id: 2 },
					{ id: 3, name: '–ì–æ—Ä–Ω–∏—á–Ω–∞—è', emoji: 'üßπ', poster_storage_id: null },
					{ id: 4, name: '–ú–µ–Ω–µ–¥–∂–µ—Ä', emoji: 'üë®‚Äçüíº', poster_storage_id: null }
				]);
			}
		}
		
		function displaySections(departments) {
			const container = document.getElementById('sectionsContainer');
			
			// Add manager section first (special case)
			let sectionsHtml = `
				<button onclick="selectSection('manager')" class="w-full bg-green-500 hover:bg-green-600 text-white font-medium py-6 px-6 rounded-lg transition-colors duration-200 flex items-center justify-start">
					<span class="text-3xl mr-4">üë®‚Äçüíº</span>
					<div class="text-left">
						<div class="font-semibold text-lg">–ú–µ–Ω–µ–¥–∂–µ—Ä</div>
						<div class="text-sm opacity-90">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏</div>
					</div>
				</button>
				
				<button onclick="selectSection('delivery')" class="w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-6 px-6 rounded-lg transition-colors duration-200 flex items-center justify-start">
					<span class="text-3xl mr-4">üöö</span>
					<div class="text-left">
						<div class="font-semibold text-lg">–î–æ—Å—Ç–∞–≤–∫–∞</div>
						<div class="text-sm opacity-90">–ú–æ–∏ –∑–∞–∫–∞–∑—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ</div>
					</div>
				</button>
			`;
			
			// Add department sections
			departments.forEach(dept => {
				// Skip if it's manager (already added above)
				if (dept.name.toLowerCase() === '–º–µ–Ω–µ–¥–∂–µ—Ä') return;

				const colors = getSectionColors(dept.name);
				const description = getSectionDescription(dept.name, dept.poster_storage_id);
				const sectionKey = getSectionKey(dept.name);
				const storageId = dept.poster_storage_id;

				sectionsHtml += `
					<button onclick="selectSection('${sectionKey}', '${dept.name}', '${storageId || ''}')" class="w-full ${colors} text-white font-medium py-6 px-6 rounded-lg transition-colors duration-200 flex items-center justify-start">
						<span class="text-3xl mr-4">${dept.emoji}</span>
						<div class="text-left">
							<div class="font-semibold text-lg">${dept.name}</div>
							<div class="text-sm opacity-90">${description}</div>
						</div>
					</button>
				`;
			});
			
			container.innerHTML = sectionsHtml;
		}
		
		function getSectionColors(deptName) {
			const name = deptName.toLowerCase();
			if (name.includes('–∫—É—Ö–Ω—è')) return 'bg-orange-500 hover:bg-orange-600';
			if (name.includes('–±–∞—Ä')) return 'bg-purple-500 hover:bg-purple-600';
			if (name.includes('–≥–æ—Ä–Ω–∏—á–Ω–∞—è')) return 'bg-pink-500 hover:bg-pink-600';
			if (name.includes('—Å–∫–ª–∞–¥')) return 'bg-gray-500 hover:bg-gray-600';
			if (name.includes('–æ—Ñ–∏—Å')) return 'bg-blue-500 hover:bg-blue-600';
			if (name.includes('—Ä–µ—Å–µ–ø—à–Ω')) return 'bg-indigo-500 hover:bg-indigo-600';
			return 'bg-teal-500 hover:bg-teal-600'; // Default color
		}
		
		function getSectionDescription(deptName, posterStorageId) {
			const name = deptName.toLowerCase();
			if (name.includes('–∫—É—Ö–Ω—è')) return '–ó–∞–∫–∞–∑—ã –¥–ª—è –∫—É—Ö–Ω–∏';
			if (name.includes('–±–∞—Ä')) return '–ó–∞–∫–∞–∑—ã –¥–ª—è –±–∞—Ä–∞';
			if (name.includes('–≥–æ—Ä–Ω–∏—á–Ω–∞—è')) return '–•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã';
			if (posterStorageId) return '–¢–æ–≤–∞—Ä—ã –∏–∑ Poster';
			return '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏';
		}
		
		function getSectionKey(deptName) {
			const name = deptName.toLowerCase();
			if (name.includes('–∫—É—Ö–Ω—è')) return 'kitchen';
			if (name.includes('–±–∞—Ä')) return 'bar';
			if (name.includes('–≥–æ—Ä–Ω–∏—á–Ω–∞—è')) return 'custom';
			if (name.includes('–æ—Ñ–∏—Å')) return '–æ—Ñ–∏—Å';
			// For custom departments, use a safe URL key
			return deptName.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '');
		}
		
		function selectSection(sectionKey, deptName = '', storageId = '') {
			console.log(`Selected section: ${sectionKey}`, deptName, storageId);

			// Redirect to appropriate page
			if (sectionKey === 'manager') {
				window.location.href = '/manager';
			} else if (sectionKey === 'delivery') {
				window.location.href = '/delivery';
			} else if (storageId && storageId !== 'null' && storageId !== '') {
				// If department has a Poster storage ID, redirect to dynamic storage page
				window.location.href = `/storage/${storageId}`;
			} else {
				// For custom departments without storage ID, redirect to custom page
				window.location.href = '/custom';
			}
		}
		
		// Load sections when page loads
		document.addEventListener('DOMContentLoaded', loadSections);
	</script>
</Layout>
