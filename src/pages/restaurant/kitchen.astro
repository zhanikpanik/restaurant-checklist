---
import Layout from '../../layouts/Layout.astro';

// Get KITCHEN-ONLY data using real Poster storage filtering (storage_id=2)
let kitchenProducts = [];
try {
	const response = await fetch(`${Astro.url.origin}/api/get-kitchen-inventory`);
	const result = await response.json();
	
	if (result.success && result.data.length > 0) {
		// Use ONLY kitchen inventory from Poster storage ID 2
		kitchenProducts = result.data;
		console.log(`‚úÖ Loaded ${kitchenProducts.length} kitchen products from Poster storage ID 2 (${result.storage.name})`);
	} else {
		throw new Error('No kitchen products from Poster storage ID 2');
	}
} catch (error) {
	console.warn('‚ö†Ô∏è Failed to load Poster kitchen inventory, using fallback kitchen mock data:', error.message);
	
	// Fallback kitchen mock data if Poster API fails
	kitchenProducts = [
		{ id: 101, name: "–ú—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è", quantity: 15, unit: "–∫–≥", minQuantity: 10, checked: false },
		{ id: 102, name: "–†–∏—Å", quantity: 8, unit: "–∫–≥", minQuantity: 5, checked: false },
		{ id: 103, name: "–ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ", quantity: 2.5, unit: "–ª", minQuantity: 2, checked: false },
		{ id: 104, name: "–°–æ–ª—å", quantity: 3, unit: "–∫–≥", minQuantity: 1, checked: false },
		{ id: 105, name: "–°–∞—Ö–∞—Ä", quantity: 0, unit: "–∫–≥", minQuantity: 3, checked: false },
		{ id: 106, name: "–Ø–π—Ü–∞", quantity: 0, unit: "—à—Ç", minQuantity: 30, checked: false },
		{ id: 107, name: "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", quantity: 12, unit: "–∫–≥", minQuantity: 15, checked: false },
		{ id: 108, name: "–õ—É–∫", quantity: 4, unit: "–∫–≥", minQuantity: 3, checked: false },
		{ id: 109, name: "–ú–æ—Ä–∫–æ–≤—å", quantity: 0, unit: "–∫–≥", minQuantity: 2, checked: false },
		{ id: 110, name: "–ü–æ–º–∏–¥–æ—Ä—ã", quantity: 0, unit: "–∫–≥", minQuantity: 3, checked: false },
		{ id: 111, name: "–û–≥—É—Ä—Ü—ã", quantity: 1, unit: "–∫–≥", minQuantity: 2, checked: false },
		{ id: 112, name: "–ú—è—Å–æ –≥–æ–≤—è–¥–∏–Ω–∞", quantity: 0, unit: "–∫–≥", minQuantity: 5, checked: false },
		{ id: 113, name: "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", quantity: 3, unit: "–∫–≥", minQuantity: 4, checked: false },
		{ id: 114, name: "–†—ã–±–∞", quantity: 0, unit: "–∫–≥", minQuantity: 2, checked: false },
		{ id: 115, name: "–°—ã—Ä", quantity: 1.5, unit: "–∫–≥", minQuantity: 2, checked: false },
	];
}
---

<Layout title="–ö—É—Ö–Ω—è - –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å">
	<div class="min-h-screen bg-white">
		<!-- Header with Navigation -->
		<header class="bg-white border-b border-gray-200 px-4 py-6">
			<div class="max-w-md mx-auto">
				<div class="flex items-center justify-between mb-4">
					<a href="/" class="text-blue-600 hover:text-blue-800">‚Üê –ë–∞—Ä</a>
					<h1 class="text-3xl font-bold text-black">–ö—É—Ö–Ω—è</h1>
					<a href="/restaurant/procurement" class="text-green-600 hover:text-green-800 text-sm">–ó–∞–∫—É–ø–∫–∏ ‚Üí</a>
				</div>
				<div class="text-center">
					<span class="text-sm text-gray-600">
						{kitchenProducts.length > 15 ? "üìä –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Poster" : "üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"}
					</span>
				</div>
			</div>
		</header>

		<!-- Main Content -->
		<main class="max-w-md mx-auto px-4 py-6">
			<!-- Inventory View (Default) -->
			<div id="inventoryView" class="space-y-4">
				{kitchenProducts.map((product) => (
					<div class="product-item flex items-center justify-between p-4 bg-white rounded-lg border-l-4 border-orange-400" data-product-id={product.id}>
						<div class="flex-1">
							<h3 class="text-lg font-medium text-gray-900">{product.name}</h3>
							{product.quantity <= product.minQuantity && (
								<span class="text-xs text-red-600 font-medium">‚ö†Ô∏è –ú–∞–ª–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</span>
							)}
						</div>
						<div class="text-right">
							<div class="text-lg font-semibold text-gray-900">
								{product.quantity} {product.unit}
							</div>
							<div class="text-xs text-gray-500">
								–º–∏–Ω: {product.minQuantity} {product.unit}
							</div>
						</div>
					</div>
				))}
			</div>

			<!-- Shopping List View (Hidden by default) -->
			<div id="shoppingListView" class="space-y-4 hidden">
				<!-- Search Field -->
				<div class="sticky top-0 z-10 bg-gray-50 p-4 rounded-lg border-2 border-orange-200 shadow-sm">
					<div class="relative">
						<div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
							<svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</div>
						<input 
							type="text" 
							id="productSearchInput"
							class="block w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-orange-500 focus:border-orange-500 text-base"
							placeholder="üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∫—É—Ö–Ω–∏..."
							autocomplete="off"
						/>
						<div class="absolute inset-y-0 right-0 pr-3 flex items-center">
							<button 
								id="clearSearchBtn"
								class="h-5 w-5 text-gray-400 hover:text-gray-600 focus:outline-none hidden"
								title="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"
							>
								<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
								</svg>
							</button>
						</div>
					</div>
					<div id="searchResultsCount" class="mt-2 text-sm text-gray-600 hidden">
						<span id="searchResultsText"></span>
					</div>
				</div>
				
				<!-- Products List -->
				<div id="productsList" class="space-y-4">
				{kitchenProducts.map((product) => (
					<div class="product-item flex items-center justify-between p-4 bg-white border border-gray-200 rounded-lg" data-product-id={product.id}>
						<div class="flex-1">
							<h3 class="text-base font-medium text-gray-900">{product.name}</h3>
						</div>
						<div class="flex items-center space-x-1">
							<button 
								class="quantity-btn minus-btn w-7 h-7 flex items-center justify-center border border-gray-300 rounded text-gray-600 hover:bg-gray-50 text-sm"
								data-product-id={product.id}
								data-action="decrease"
							>
								-
							</button>
							<div class="quantity-input-container min-w-[70px] text-center">
								<div class="flex items-center justify-center">
									<input 
										type="number" 
										step="0.5"
										min="0"
										max="9999"
										class="quantity-input w-12 px-1 py-1 border border-gray-300 rounded text-gray-900 text-center text-xs"
										data-product-id={product.id}
										value="0"
										placeholder="0.5"
									/>
									<span class="unit-label text-xs text-gray-600 font-medium ml-1">{product.unit}</span>
								</div>
							</div>
							<button 
								class="quantity-btn plus-btn w-7 h-7 flex items-center justify-center border border-gray-300 rounded text-gray-600 hover:bg-gray-50 text-sm"
								data-product-id={product.id}
								data-action="increase"
							>
								+
							</button>
						</div>
					</div>
				))}
				</div>
			</div>

			<!-- Action Buttons -->
			<div class="mt-8 space-y-4">
				<!-- Create Shopping List Button (Floating) -->
				<button 
					id="createShoppingListBtn" 
					class="fixed bottom-6 right-6 bg-orange-600 hover:bg-orange-700 text-white font-medium py-4 px-6 rounded-full shadow-2xl z-50 transition-all duration-300 hover:scale-105 min-w-[180px]"
				>
					–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–∫—É–ø –¥–ª—è –∫—É—Ö–Ω–∏
				</button>

				<!-- Shopping List Actions (Hidden by default) -->
				<div id="shoppingListActions" class="hidden space-y-3">
					<button 
						id="sendWhatsAppBtn" 
						class="w-full bg-green-500 hover:bg-green-600 text-white font-medium py-4 px-6 rounded-lg flex items-center justify-center space-x-2"
					>
						<span>üì±</span>
						<span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp</span>
					</button>
					<button 
						id="saveShoppingListBtn" 
						class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-4 px-6 rounded-lg"
					>
						–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫—É–ø
					</button>
					<button 
						id="cancelShoppingListBtn" 
						class="w-full bg-gray-500 hover:bg-gray-600 text-white font-medium py-4 px-6 rounded-lg"
					>
						–û—Ç–º–µ–Ω–∞
					</button>
				</div>
			</div>
		</main>
	</div>

	<script>
		// Kitchen-specific script configuration
		document.addEventListener('DOMContentLoaded', function() {
			// Set department for localStorage
			window.currentDepartment = 'kitchen';
			
			console.log('üçΩÔ∏è Kitchen inventory initialized');
			console.log('Department:', window.currentDepartment);
		});
	</script>
	<script src="/scripts/checklist.js" is:inline></script>
</Layout> 