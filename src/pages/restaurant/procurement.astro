---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫—É–ø–∫–∞–º–∏">
	<div class="min-h-screen bg-gray-50">
		<!-- Header -->
		<header class="bg-white border-b border-gray-200 px-4 py-6">
			<div class="max-w-4xl mx-auto">
				<div class="flex items-center justify-between mb-4">
					<a href="/" class="text-blue-600 hover:text-blue-800">‚Üê –ë–∞—Ä</a>
					<h1 class="text-3xl font-bold text-black">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫—É–ø–∫–∞–º–∏</h1>
					<a href="/restaurant/kitchen" class="text-orange-600 hover:text-orange-800">–ö—É—Ö–Ω—è ‚Üí</a>
				</div>
			</div>
		</header>

		<!-- Main Content -->
		<main class="max-w-4xl mx-auto px-4 py-6">
			<!-- Department Tabs -->
			<div class="mb-6">
				<div class="border-b border-gray-200">
					<nav class="-mb-px flex space-x-8">
						<button 
							id="allTab" 
							class="procurement-tab border-b-2 border-green-500 py-4 px-1 text-sm font-medium text-green-600"
						>
							–í—Å–µ –∑–∞–∫—É–ø–∫–∏
						</button>
						<button 
							id="barTab" 
							class="procurement-tab border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300"
						>
							–ë–∞—Ä
						</button>
						<button 
							id="kitchenTab" 
							class="procurement-tab border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300"
						>
							–ö—É—Ö–Ω—è
						</button>
					</nav>
				</div>
			</div>

			<!-- Purchase Request Status Cards -->
			<div class="grid gap-6 mb-8">
				<!-- Pending Requests -->
				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center justify-between mb-4">
						<h2 class="text-xl font-semibold text-gray-900">–û–∂–∏–¥–∞—é—â–∏–µ –∑–∞–∫—É–ø–∫–∏</h2>
						<span class="bg-yellow-100 text-yellow-800 text-sm font-medium px-2.5 py-0.5 rounded">
							<span id="pendingCount">0</span> –∑–∞—è–≤–æ–∫
						</span>
					</div>
					<div id="pendingRequests" class="space-y-3">
						<p class="text-gray-500 text-center py-8">–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–∫—É–ø–∫—É</p>
					</div>
				</div>

				<!-- Current Shopping List -->
				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center justify-between mb-4">
						<h2 class="text-xl font-semibold text-gray-900">–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–∫—É–ø–æ–∫</h2>
						<div class="flex space-x-2">
							<button 
								id="exportListBtn"
								class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm"
							>
								–≠–∫—Å–ø–æ—Ä—Ç
							</button>
							<button 
								id="clearListBtn"
								class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-sm"
							>
								–û—á–∏—Å—Ç–∏—Ç—å
							</button>
						</div>
					</div>
					<div id="consolidatedList" class="space-y-3">
						<p class="text-gray-500 text-center py-8">–°–ø–∏—Å–æ–∫ –∑–∞–∫—É–ø–æ–∫ –ø—É—Å—Ç</p>
					</div>
				</div>

				<!-- Purchase Actions -->
				<div class="bg-white rounded-lg shadow p-6">
					<h2 class="text-xl font-semibold text-gray-900 mb-4">–î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫—É–ø–∫–∞–º–∏</h2>
					<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
						<button 
							id="markPurchasedBtn"
							class="bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-6 rounded-lg"
						>
							‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –∑–∞–∫—É–ø–ª–µ–Ω–æ
						</button>
						<button 
							id="updatePosterBtn"
							class="bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-3 px-6 rounded-lg"
						>
							üîÑ –û–±–Ω–æ–≤–∏—Ç—å Poster
						</button>
						<button 
							id="generateReportBtn"
							class="bg-purple-600 hover:bg-purple-700 text-white font-medium py-3 px-6 rounded-lg"
						>
							üìä –û—Ç—á–µ—Ç –ø–æ –∑–∞–∫—É–ø–∫–∞–º
						</button>
						<button 
							id="lowStockAlertBtn"
							class="bg-red-600 hover:bg-red-700 text-white font-medium py-3 px-6 rounded-lg"
						>
							‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ —Ç–æ–≤–∞—Ä–æ–≤
						</button>
					</div>
				</div>
			</div>

			<!-- Purchase History -->
			<div class="bg-white rounded-lg shadow p-6">
				<h2 class="text-xl font-semibold text-gray-900 mb-4">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫—É–ø–æ–∫</h2>
				<div id="purchaseHistory" class="space-y-3">
					<p class="text-gray-500 text-center py-8">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫—É–ø–æ–∫ –ø—É—Å—Ç–∞</p>
				</div>
			</div>
		</main>
	</div>

	<script>
		// Procurement Management Script
		document.addEventListener('DOMContentLoaded', function() {
			initializeProcurementInterface();
			loadPurchaseRequests();
			setupEventListeners();
		});

		function initializeProcurementInterface() {
			console.log('üîÑ Initializing procurement interface...');
			loadConsolidatedList();
			loadPurchaseHistory();
		}

		function setupEventListeners() {
			// Tab switching
			document.querySelectorAll('.procurement-tab').forEach(tab => {
				tab.addEventListener('click', function() {
					switchTab(this.id);
				});
			});

			// Action buttons
			document.getElementById('markPurchasedBtn').addEventListener('click', markAsPurchased);
			document.getElementById('updatePosterBtn').addEventListener('click', updatePosterInventory);
			document.getElementById('exportListBtn').addEventListener('click', exportShoppingList);
			document.getElementById('clearListBtn').addEventListener('click', clearShoppingList);
			document.getElementById('generateReportBtn').addEventListener('click', generateReport);
			document.getElementById('lowStockAlertBtn').addEventListener('click', showLowStockAlert);
		}

		function loadPurchaseRequests() {
			// Load bar and kitchen purchase requests from localStorage
			const barList = JSON.parse(localStorage.getItem('barShoppingList') || 'null');
			const kitchenList = JSON.parse(localStorage.getItem('kitchenShoppingList') || 'null');
			
			let pendingRequests = [];
			
			if (barList && barList.items.length > 0) {
				pendingRequests.push({
					department: '–ë–∞—Ä',
					timestamp: barList.timestamp,
					items: barList.items,
					totalItems: barList.totalItems,
					color: 'blue'
				});
			}
			
			if (kitchenList && kitchenList.items.length > 0) {
				pendingRequests.push({
					department: '–ö—É—Ö–Ω—è',
					timestamp: kitchenList.timestamp,
					items: kitchenList.items,
					totalItems: kitchenList.totalItems,
					color: 'orange'
				});
			}
			
			displayPendingRequests(pendingRequests);
			updatePendingCount(pendingRequests.length);
		}

		function displayPendingRequests(requests) {
			const container = document.getElementById('pendingRequests');
			
			if (requests.length === 0) {
				container.innerHTML = '<p class="text-gray-500 text-center py-8">–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–∫—É–ø–∫—É</p>';
				return;
			}
			
			container.innerHTML = requests.map(request => `
				<div class="border border-${request.color}-200 bg-${request.color}-50 rounded-lg p-4">
					<div class="flex items-center justify-between mb-2">
						<h3 class="font-medium text-${request.color}-900">${request.department}</h3>
						<span class="text-sm text-gray-500">${new Date(request.timestamp).toLocaleDateString('ru-RU')}</span>
					</div>
					<p class="text-sm text-gray-600 mb-3">${request.totalItems} —Ç–æ–≤–∞—Ä–æ–≤</p>
					<div class="flex space-x-2">
						<button 
							onclick="approveRequest('${request.department.toLowerCase()}')"
							class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm"
						>
							–£—Ç–≤–µ—Ä–¥–∏—Ç—å
						</button>
						<button 
							onclick="viewRequestDetails('${request.department.toLowerCase()}')"
							class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-sm"
						>
							–î–µ—Ç–∞–ª–∏
						</button>
					</div>
				</div>
			`).join('');
		}

		function loadConsolidatedList() {
			// Combine all approved purchase requests
			const consolidatedItems = [];
			
			// Add logic to consolidate duplicate items
			// For now, just display a placeholder
			const container = document.getElementById('consolidatedList');
			container.innerHTML = '<p class="text-gray-500 text-center py-8">–£—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–∫—É–ø–æ–∫</p>';
		}

		function updatePendingCount(count) {
			document.getElementById('pendingCount').textContent = count;
		}

		function switchTab(tabId) {
			// Remove active class from all tabs
			document.querySelectorAll('.procurement-tab').forEach(tab => {
				tab.className = 'procurement-tab border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300';
			});
			
			// Add active class to clicked tab
			document.getElementById(tabId).className = 'procurement-tab border-b-2 border-green-500 py-4 px-1 text-sm font-medium text-green-600';
			
			// Filter content based on tab
			filterContentByDepartment(tabId);
		}

		function filterContentByDepartment(tabId) {
			// Filter pending requests and lists by department
			const department = tabId.replace('Tab', '');
			console.log(`Filtering by department: ${department}`);
			// Implementation would filter the displayed content
		}

		// Action functions
		function approveRequest(department) {
			console.log(`Approving ${department} request`);
			// Move from pending to consolidated list
			alert(`–ó–∞—è–≤–∫–∞ –æ—Ç ${department} —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!`);
			loadPurchaseRequests();
			loadConsolidatedList();
		}

		function viewRequestDetails(department) {
			const list = JSON.parse(localStorage.getItem(`${department}ShoppingList`) || 'null');
			if (list) {
				const items = list.items.map(item => `${item.name}: ${item.quantity} ${item.unit}`).join('\n');
				alert(`–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏ ${department}:\n\n${items}`);
			}
		}

		function markAsPurchased() {
			if (confirm('–û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∫–∞–∫ –∑–∞–∫—É–ø–ª–µ–Ω–Ω—ã–µ?')) {
				console.log('Marking items as purchased...');
				alert('–¢–æ–≤–∞—Ä—ã –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ –∑–∞–∫—É–ø–ª–µ–Ω–Ω—ã–µ!');
				// Clear lists and update inventory
				loadPurchaseHistory();
			}
		}

		async function updatePosterInventory() {
			console.log('Updating Poster inventory...');
			
			// Get all purchased items from both departments
			const barList = JSON.parse(localStorage.getItem('barShoppingList') || 'null');
			const kitchenList = JSON.parse(localStorage.getItem('kitchenShoppingList') || 'null');
			
			const updates = [];
			
			if (barList && barList.items) {
				updates.push({
					department: 'bar',
					items: barList.items
				});
			}
			
			if (kitchenList && kitchenList.items) {
				updates.push({
					department: 'kitchen',
					items: kitchenList.items
				});
			}
			
			if (updates.length === 0) {
				alert('–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Poster');
				return;
			}
			
			try {
				// Update each department
				for (const update of updates) {
					const response = await fetch('/api/update-poster-inventory', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json'
						},
						body: JSON.stringify({
							purchasedItems: update.items,
							department: update.department
						})
					});
					
					const result = await response.json();
					
					if (result.success) {
						console.log(`‚úÖ ${update.department} inventory updated:`, result);
					} else {
						console.error(`‚ùå Failed to update ${update.department}:`, result.error);
					}
				}
				
				alert(`Poster –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö –æ—Ç–¥–µ–ª–æ–≤!\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.`);
				
			} catch (error) {
				console.error('Error updating Poster inventory:', error);
				alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Poster: ' + error.message);
			}
		}

		function exportShoppingList() {
			console.log('Exporting shopping list...');
			alert('–°–ø–∏—Å–æ–∫ –∑–∞–∫—É–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!');
		}

		function clearShoppingList() {
			if (confirm('–û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–∫—É–ø–æ–∫?')) {
				localStorage.removeItem('barShoppingList');
				localStorage.removeItem('kitchenShoppingList');
				loadPurchaseRequests();
				loadConsolidatedList();
			}
		}

		function generateReport() {
			console.log('Generating procurement report...');
			alert('–û—Ç—á–µ—Ç –ø–æ –∑–∞–∫—É–ø–∫–∞–º —Å–æ–∑–¥–∞–Ω!');
		}

		function showLowStockAlert() {
			alert('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ:\n‚Ä¢ –°–∞—Ö–∞—Ä (–ë–∞—Ä)\n‚Ä¢ –Ø–π—Ü–∞ (–ö—É—Ö–Ω—è)\n‚Ä¢ –ú–æ—Ä–∫–æ–≤—å (–ö—É—Ö–Ω—è)');
		}

		function loadPurchaseHistory() {
			const container = document.getElementById('purchaseHistory');
			// For now, show placeholder
			container.innerHTML = '<p class="text-gray-500 text-center py-8">–ó–∞–∫—É–ø–∫–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è</p>';
		}
	</script>
</Layout> 